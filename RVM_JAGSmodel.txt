model {

#--------- Go Process -----------#
    deltaG    ~ dunif(0.0001,12) 
    alphaG[1] ~ dunif(0.5,4) 
    alphaG[2] <- alphaG[1] 
    betaG     ~ dbeta(1,1) T(0.0001,0.9999)
    xMin      ~ dunif(0.0001,minT-0.01) 
    
    for (rr in 1:2) {
    for (t in 1:NN) {
        goProc[t,rr]  ~ dwiener(alphaG[1],xMin,betaG,delta[t,rr]) 
        delta[t,rr]   <- deltaG*stimLR[t,rr]       
        ones[t,rr]    ~ dinterval(equals(tr[t,rr],1)*maxtime+equals(tr[t,rr],2)*ifelse(stProc[t,rr]>=0,min(maxtime,stProc[t,rr]),maxtime)+equals(tr[t,rr],3)*abs(goProc[t,rr])+equals(tr[t,rr],4)*abs(goProc[t,rr]),equals(tr[t,rr],1)*abs(goProc[t,rr])+equals(tr[t,rr],2)*abs(goProc[t,rr])+equals(tr[t,rr],3)*maxtime+equals(tr[t,rr],4)*ifelse(stProc[t,rr]>=0,min(maxtime,stProc[t,rr]),maxtime))
    }
    }

#--------- Stop Process -----------#
    pp     ~ dunif(4,24)
    alphaS ~ dunif(0.5,6) 
    deltaS <- pp/alphaS
    sMin   ~ dunif(0.0001,xMin) 
    pStop  <- 0.5
    betaS  <- 0.5
    for (rr in 1:2) {
    for (t in 1:NN) {
        stProc[t,rr]  ~ dwiener(alphaS,sMin+ssdT[t,rr],betaS,deltaS) 
    }
    }

#----------Posterior Predictive --------#
    for (rr in 1:2) {
    for (t in 1:NN) {
        pgoProc[t,rr]  ~ dwiener(alphaG[1],xMin,betaG,delta[t,rr]) 
        pstProc[t,rr]  ~ dwiener(alphaS,sMin+ssdT[t,rr],betaS,deltaS) 
        pones[t,rr]    ~ dinterval(equals(tr[t,rr],1)*maxtime+equals(tr[t,rr],2)*ifelse(pstProc[t,rr]>=0,min(maxtime,pstProc[t,rr]),maxtime)+equals(tr[t,rr],3)*abs(pgoProc[t,rr])+equals(tr[t,rr],4)*abs(pgoProc[t,rr]),equals(tr[t,rr],1)*abs(pgoProc[t,rr])+equals(tr[t,rr],2)*abs(pgoProc[t,rr])+equals(tr[t,rr],3)*maxtime+equals(tr[t,rr],4)*ifelse(pstProc[t,rr]>=0,min(maxtime,pstProc[t,rr]),maxtime))
    }
    }

}